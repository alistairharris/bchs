<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<title>BCHS: BSD, C, httpd, SQLite</title>
		<link href="https://fonts.googleapis.com/css?family=Playfair+Display:400,400italic" rel="stylesheet" />
		<link href="https://fonts.googleapis.com/css?family=Alegreya+Sans:300,300italic" rel="stylesheet" />
		<link href="start.css" rel="stylesheet" />
	</head>
	<body>
		<section itemscope="itemscope" itemtype="http://schema.org/WebPage">
			<header>
				<h1><img itemprop="image" src="logo-white.png" alt="BCHS Logo" id="logo" /><a href="index.html" itemprop="name">BCHS stack</a></h1>
				<div>BSD, C, httpd, SQLite: <a href="start.html">start</a>, <span>tools</span>, <a href="easy.html">example</a>.</div>
			</header>
			<article>
				<p itemprop="description">
					You've <a href="start.html">deployed</a> BCHS.
					Your editor is open.
					Where do you begin?
				</p>
				<ol>
					<li>
						<section>
							<p>
								Don't just write C.
								Write portable and secure C.
							</p>
						</section>
						<section class="explain">
							<p>
								Anybody can write crappy, bug-ridden and insecure code. In any language.
								Good news: with C, it's even easier!
								So familiarise yourself with common (and common-sense) pitfalls noted in the 
								<a href="https://www.securecoding.cert.org/confluence/display/c/SEI+CERT+C+Coding+Standard">SEI CERT C coding standard</a>
								and
								<a href="http://www.c-faq.com/">comp.lang.c FAQ</a>.
							</p>
						</section>
					</li>
					<li>
						<section>
							<p>
								Be familiar with <a href="https://tools.ietf.org/html/rfc3875">CGI</a> and <a
									href="http://www.fastcgi.com/devkit/doc/fcgi-spec.html">FastCGI</a>.
							</p>
							<p class="alt">
								...or...
							</p>
							<p>
								Install and use <a href="http://kristaps.bsd.lv/kcgi">kcgi</a><sup><a href="#footnote1">*</a></sup> or <a
									href="http://www.fastcgi.com/">fcgi</a> from <a
									href="http://www.openbsd.org/faq/faq15.html">packages</a>.
							</p>
						</section>
						<section class="explain">
							<p>
								If you don't want to parse content by hand&#8212;and you really, really don't&#8212;let a
								library do it for you.
								(Want FastCGI?  Be careful!
								CGI scripts run by <a
									href="http://man.openbsd.org/OpenBSD-current/man8/slowcgi.8">slowcgi(8)</a>
								already have their privileges dropped and file-system constrained.  
								With FastCGI, you'll need to use a framework that does so for you!)
							</p>
						</section>
					</li>
					<li>
						<section>
							<p>
								Get to know your security tools.
								OpenBSD has <a href="http://man.openbsd.org/OpenBSD-current/man2/pledge.2">pledge(2)</a>.
								<q>Embrace the pledge.</q>
							</p>
						</section>
						<section class="explain">
							<p>
								Your application will be under assault every moment it's running.
								And it will have bugs: limit the damage caused by inevitable mistakes by
								constraining (sandboxing) the environment available to your application.
								Oh, right: there's also
								<a href="http://man.openbsd.org/OpenBSD-current/man2/chroot.2">chroot(2)</a>,
								dropping privileges, etc...
							</p>
						</section>
					</li>
					<li>
						<section>
							<p>
								Statically scan your binary with <a href="http://www.llvm.org/">LLVM</a>
								(from <a href="http://www.openbsd.org/faq/faq15.html">packages</a>).
								There's also <a href="http://www.frama-c.com/">frama-c</a> 
								and <a href="http://www.splint.org/">splint</a>, 
								both also in packages.
							</p>
						</section>
						<section class="explain">
							<p>
								These static analysis tools can help catch source-level bugs.
								An alternative compiler (LLVM) can also prevent you from relying too much on <a
									href="http://man.openbsd.org/OpenBSD-current/man1/c++.1">gcc(1)</a>'s
								extensions, which reduces portability.
							</p>
							<p>
								If your project is open source, you can register it with <a
									href="https://www.coverity.com">Coverity</a>, too.
							</p>
						</section>
					</li>
					<li>
						<section>
							<p>
								Run your application under <a href="http://valgrind.org/">valgrind</a> (from <a
									href="http://www.openbsd.org/faq/faq15.html">packages</a>) and make sure
								your <a
									href="http://man.openbsd.org/OpenBSD-current/man5/malloc.conf.5">malloc.conf(5)</a>
								flags are unforgiving.
							</p>
						</section>
						<section class="explain">
							<p>
								Memory errors are often the subtlest.
								Use these tools as much as possible to catch any unnoticed allocation issues.
							</p>
						</section>
					</li>
					<li>
						<section>
							<p>
								Parsing data?
								Push your parsers into libraries and use <a
									href="http://lcamtuf.coredump.cx/afl/">AFL</a> (from <a
									href="http://www.openbsd.org/faq/faq15.html">packages</a>) to put them
								through inputs you haven't tested.
							</p>
						</section>
						<section class="explain">
							<p>
								The thought that <q>this input could never happen</q> is your adversary's favourite.
								It <i>will</i> happen.
								Make sure any parsing sequences are being run through as many code-paths as
								possible with this tool.
							</p>
						</section>
					</li>
				</ol>
				<p>
					Don't forget: BSD is a community of professionals.
					Go to conferences (<a href="http://www.eurobsdcon.org">EuroBSDCon</a>, <a
						href="http://www.asiasbsdcon.org">AsiaBSDCon</a>, <a href="http://www.bsdcan.org">BSDCan</a>,
					etc.).
					Subscribe to the <a href="http://www.openbsd.org/mail.html">mailing lists</a>.
					<a href="http://www.openbsd.org/donations.html">Donate</a>.
					And lastly but most important of all: use the <a href="http://man.openbsd.org">man pages</a>!
					(<a href="https://www.sqlite.org/">SQLite</a> doesn't have its own bundled manpages: you'll need to use
					<a href="https://github.com/kristapsdz/sqlite2mdoc">sqlite2mdoc</a><sup><a href="#footnote1">*</a></sup>.)
				</p>
				<p>
					Convinced?
					See it <a href="easy.html">in action</a>.
				</p>
				<p class="footnote" id="footnote1">
					<sup>*</sup>Disclaimer: I (<a href="https://kristaps.bsd.lv">Kristaps</a>) wrote this.
				</p>
			</article>
			<footer>
				<div>&#169; 2015&#8211;2016 <a rel="author" href="https://kristaps.bsd.lv">Kristaps Dzonsons</a></div>
			</footer>
		</section>
	</body>
</html>

